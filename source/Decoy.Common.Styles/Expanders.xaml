<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Decoy.Common.Converters;assembly=Decoy.Common">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Decoy.Common.Styles;component/Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
    
    <ControlTemplate x:Key="Expander.ToggleButton.ControlTemplate" TargetType="{x:Type ToggleButton}">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="CollapsedArrow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ExpandededArrow">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            
            <Path x:Name="CollapsedArrow" 
                  HorizontalAlignment="Right"
                  VerticalAlignment="Center" 
                  Fill="{StaticResource Brush.TextBlock.Foreground.Inverted}"
                  Data="F1 M20,20z M0,0z M7.64582,4.14708C7.84073,3.95147,8.15731,3.9509,8.35292,4.14582L13.8374,9.6108C14.0531,9.82574,14.0531,10.1751,13.8374,10.39L8.35292,15.855C8.15731,16.0499 7.84073,16.0493 7.64582,15.8537 7.4509,15.6581 7.45147,15.3415 7.64708,15.1466L12.8117,10.0004 7.64708,4.85418C7.45147,4.65927,7.4509,4.34269,7.64582,4.14708z" />

            <Path x:Name="ExpandededArrow" 
                  HorizontalAlignment="Right" 
                  VerticalAlignment="Center" 
                  Visibility="Collapsed" 
                  Fill="{StaticResource Brush.TextBlock.Foreground.Inverted}"
                  Data="F1 M20,20z M0,0z M15.8537,7.64582C16.0493,7.84073,16.0499,8.15731,15.855,8.35292L10.39,13.8374C10.1751,14.0531,9.82574,14.0531,9.6108,13.8374L4.14582,8.35292C3.9509,8.15731 3.95147,7.84073 4.14708,7.64582 4.34269,7.4509 4.65927,7.45147 4.85418,7.64708L10.0004,12.8117 15.1466,7.64708C15.3415,7.45147,15.6581,7.4509,15.8537,7.64582z" />
        </Grid>
    </ControlTemplate>
    
    <Style x:Key="Page.Expander.Style" TargetType="{x:Type Expander}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="32" />
                            <RowDefinition x:Name="ContentRow" Height="0" />
                        </Grid.RowDefinitions>

                        <Border Grid.Row="0" BorderBrush="{StaticResource Brush.Border.Divider}" Background="{StaticResource Brush.Expander.Header}" BorderThickness="1">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <ContentPresenter Grid.Column="0" ContentSource="Header" Margin="2, 0, 0, 0"  />

                                <ToggleButton Grid.Column="1" 
                                              OverridesDefaultStyle="True" 
                                              Margin="0, 0, 0, 5"
                                              Visibility="{Binding IsPreferencesTabExpanded, Converter={StaticResource InverseBooleanToVisibilityConverter} }"
                                              Template="{StaticResource Expander.ToggleButton.ControlTemplate}" 
                                              IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            </Grid>
                        </Border>

                        <ContentPresenter x:Name="Content" Grid.Row="1"/>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentRow" Property="Height" Value="{Binding Height, ElementName=Content}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>